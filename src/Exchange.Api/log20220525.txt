2022-05-25 07:18:15.666 -04:00 [INF] Application started. Press Ctrl+C to shut down.
2022-05-25 07:18:15.699 -04:00 [INF] Request starting HTTP/2.0 GET https://localhost:44376/weatherforecast  
2022-05-25 07:18:15.742 -04:00 [INF] Hosting environment: Development
2022-05-25 07:18:15.742 -04:00 [INF] Content root path: C:\Projects\Exchange\src\Exchange.Api
2022-05-25 07:18:15.794 -04:00 [INF] Executing endpoint 'Exchange.Api.Controllers.WeatherForecastController.Get (Exchange.Api)'
2022-05-25 07:18:15.887 -04:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[Exchange.Api.WeatherForecast] Get(Boolean) on controller Exchange.Api.Controllers.WeatherForecastController (Exchange.Api).
2022-05-25 07:18:15.920 -04:00 [INF] Executing ObjectResult, writing value of type 'System.Linq.Enumerable+SelectRangeIterator`1[[Exchange.Api.WeatherForecast, Exchange.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2022-05-25 07:18:15.957 -04:00 [INF] Executed action Exchange.Api.Controllers.WeatherForecastController.Get (Exchange.Api) in 64.6738ms
2022-05-25 07:18:15.960 -04:00 [INF] Executed endpoint 'Exchange.Api.Controllers.WeatherForecastController.Get (Exchange.Api)'
2022-05-25 07:18:15.964 -04:00 [INF] Request finished in 272.9546ms 200 application/json; charset=utf-8
2022-05-25 07:18:16.029 -04:00 [INF] Request starting HTTP/2.0 GET https://localhost:44376/favicon.ico  
2022-05-25 07:18:16.034 -04:00 [INF] Request finished in 4.6012ms 404 
2022-05-25 07:18:26.805 -04:00 [INF] Request starting HTTP/1.1 POST https://localhost:44376/api/buy?userId=usuario2&currencyName=dolar&amountPesos=2000  0
2022-05-25 07:18:26.809 -04:00 [INF] Executing endpoint 'Exchange.Api.UseCases.BuyCurrencies.BuyController.Post (Exchange.Api)'
2022-05-25 07:18:26.828 -04:00 [INF] Route matched with {action = "Post", controller = "Buy"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(System.String, System.String, System.Decimal) on controller Exchange.Api.UseCases.BuyCurrencies.BuyController (Exchange.Api).
2022-05-25 07:18:27.099 -04:00 [INF] Currency dolar is being queried
2022-05-25 07:18:27.664 -04:00 [WRN] No type was specified for the decimal column 'MaxLimit' on entity type 'Currency'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2022-05-25 07:18:27.664 -04:00 [WRN] No type was specified for the decimal column 'Amount' on entity type 'Transaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2022-05-25 07:18:27.708 -04:00 [INF] Entity Framework Core 3.1.25 initialized 'Context' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2022-05-25 07:18:28.673 -04:00 [INF] Executed DbCommand (100ms) [Parameters=[@__currencyName_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[MaxLimit], [c].[Name], [c].[Url]
FROM [currencies] AS [c]
WHERE [c].[Name] = @__currencyName_0
2022-05-25 07:18:28.822 -04:00 [INF] Start processing HTTP request GET "https://www.bancoprovincia.com.ar/Principal/dolar"
2022-05-25 07:18:28.824 -04:00 [INF] Sending HTTP request GET "https://www.bancoprovincia.com.ar/Principal/dolar"
2022-05-25 07:18:29.424 -04:00 [INF] Received HTTP response after 597.1619ms - "OK"
2022-05-25 07:18:29.427 -04:00 [INF] End processing HTTP request after 606.8694ms - "OK"
2022-05-25 07:18:29.469 -04:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (Size = 4000), @__currencyName_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT SUM([t].[Amount])
FROM [transactions] AS [t]
WHERE (([t].[UserId] = @__userId_0) AND ([t].[CurrencyName] = @__currencyName_1)) AND ((DATEPART(month, [t].[TransactionDate]) = DATEPART(month, GETDATE())) OR (DATEPART(month, [t].[TransactionDate]) IS NULL AND DATEPART(month, GETDATE()) IS NULL))
2022-05-25 07:18:29.650 -04:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Decimal), @p1='?' (Size = 4000), @p2='?' (DbType = DateTime2), @p3='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [transactions] ([Amount], [CurrencyName], [TransactionDate], [UserId])
VALUES (@p0, @p1, @p2, @p3);
SELECT [Id]
FROM [transactions]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2022-05-25 07:18:29.715 -04:00 [INF] Executing ObjectResult, writing value of type 'Exchange.Application.Results.BuyResult'.
2022-05-25 07:18:29.722 -04:00 [INF] Executed action Exchange.Api.UseCases.BuyCurrencies.BuyController.Post (Exchange.Api) in 2892.9198ms
2022-05-25 07:18:29.722 -04:00 [INF] Executed endpoint 'Exchange.Api.UseCases.BuyCurrencies.BuyController.Post (Exchange.Api)'
2022-05-25 07:18:29.731 -04:00 [INF] Request finished in 2927.9864ms 201 application/json; charset=utf-8
